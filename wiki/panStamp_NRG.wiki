#summary panStamp NRG - Technical details
#labels CC430,panstamp,NRG,Energia

= panStamp NRG - Technical details =

= Specifications =

 * MCU: CC430F5137 (MSP430 core + CC11XX radio SOC)
 * Speed: Programmable speed between 8MHz and 24MHz
 * Flash: 32KB
 * RAM: 4KB
 * Info memory: 512 bytes
 * Unique MAC address
 * Rx current: 18 mA max
 * Tx current: 36 mA max
 * Sleep current: 0.5 uA
 * MAximum Tx power: +12 dBm
 * RF bands: 868/905/915/918 MHz ISM bands
 * Communication length: 200m in open spaces at 0dBm with pigtail antenna
 * 128-bit AES Security Encryption
 * (Optional) MMA8652FFC 3-axis accelerometer
 * On-board LED
 * Footprint for SMA edge connector
 * Programmable via SBW and serial GDB

<img width="400" src="http://www.panstamp.com/announcements/panstampnrgiscoming/panStamp_NRG_parts.png" align="center" title="panStamp NRG top view"></img>

= Pin mapping =

The following is the pin diagram of _panStamp NRG_:

<img width="500" src="http://www.panstamp.com/files/nrg_pinout.png" align="center" title="panStamp NRG pin mapping"></img>

One of the great things about the CC430 processor is that digital functions (green lines) can be moved to any P1 or P2 pin. Green text shows the default position of these functions.

= Info memory =

CC430 processors do not include EEPROM space. Instead, they provide a special region in Flash to store configurations. This region is called info memory and is 512 bytes long in the CC430F5137 MCU. The panStamp library provides the necessary functions to use this info space as any other EEPROM-based region.

= Programming methods =

_panStamp NRG_ can be programmed in two different ways. The first method is SBW (Serial bi-wire) JTAG interface. Any MSP430 programmer supporting SBW can be used to program panStamps, including [http://www.ti.com/tool/msp-exp430g2 MSP430 Launchpads] and [http://www.ti.com/tool/ez430-f2013 ez430 programmers], which are very low cost programming interfaces.

On the other hand, _panStamp NRG_ can also be programmed serially from [http://www.sourceware.org/gdb/ GDB], the popular open source debugging software. Any kind of USB-UART converter can be used for this task. Serial programming is the method used when loading firmware images from the [http://energia.nu/ Energia IDE].

The following is the necessary wiring diagram according of the programming method being used:

<img width="600" src="http://www.panstamp.com/files/nrg_pgm_layout.png" align="center" title="panStamp NRG pin mapping"></img>

== Serial programming - Booting sequence ==

panStamp's serial firmware loader, developed by [http://kimballsoftware.com/ Rick Kimball], is a compact implementation of the GDB server for the CC430 familly. Although this server doesn't provide full debugging capabilities, it can be used to read and write memory sections without having to load any specific firmware into the target board.

In order to load a new firmware, the _panStamp NRG_ board has to enter the bootloading mode. This is achieved by connecting P2.0 to ground before rebooting the board. Once the board has been programmed and to exit from bootloading mode, P2.0 has to be unconnected from ground and then apply a new reset or power-cycle to the board.

= Energia IDE =

[http://www.energia.nu Energia] is a variation of [http://processing.org/ Processing], the original IDE used by [http://www.arduino.cc/ Arduino], for MSP430's and Stellaris processors. Energia now provides support for _panStamp NRG_ as well so that users switching from _panStamp AVR_ to _panStamp NRG_ will notice very few differences on the programming side.